---
import portrait from "/main-portrait.jpeg";
import paint from "/paint.png";
---

<div
  class="relative mx-12 flex flex-col items-center justify-center gap-12 xl:flex-row xl:gap-36"
>
  <div class="w-full xl:w-1/2">
    <h1 class="text-xl">
      Hola <span id="scribble" class="font-bold">Bienvenido!</span>
    </h1>

    <div class="relative">
      <svg class="absolute h-full w-full overflow-visible">
        <defs>
          <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="0%">
            <stop offset="0%" style={{ stopColor: "#DC3A2B", stopOpacity: 1 }}
            ></stop>
            <stop offset="100%" style={{ stopColor: "#E18510", stopOpacity: 1 }}
            ></stop>
          </linearGradient>
        </defs>
        <path
          id="border-path"
          fill="none"
          stroke="url(#gradient)"
          stroke-width="4"></path>
      </svg>
      <p id="anim-p" class="p-6 text-main">
        Somos <span class="font-bold text-primary"
          >Andreu A., Nerea, Pablo, Andreu G.</span
        > Y este es nuestro proyecto de la exposición del PEP.<br />
        <br />
        Este proyecto va sobre la distribuición de la riqueza que afecta al acceso de las comunidades y los individuos a la igualdad de oportunidades.
        <br />
        <br />
        Si ahora os cuesta entender el concepto, no os preocupéis, os lo vamos a explicar.
      </p>
    </div>
  </div>

  <div class="relative">
    <img class="h-full rounded-2xl" src={portrait} alt="Hua's portrait" />
  </div>
</div>
<div class="mt-12 h-6 w-full bg-white"></div>

<style>
  #border-path {
    animation: draw 1s forwards 1s ease-out;
  }

  @keyframes draw {
    to {
      stroke-dashoffset: 0;
    }
  }
</style>

<script>
  function updatePath() {
    const textMain = document.querySelector("#anim-p") as HTMLElement;
    const path = document.querySelector("#border-path") as SVGPathElement;

    if (textMain && path) {
      path.setAttribute(
        "d",
        `M0,0 V${textMain.offsetHeight} H${textMain.offsetWidth} v${
          textMain.offsetHeight / 2
        }`
      );
      const pathLength = path.getTotalLength();

      path.style.strokeDasharray = pathLength.toString();
      path.style.strokeDashoffset = pathLength.toString();
    }
  }

  //Increment
  function incrementCounter(
    selector: string,
    current: number,
    target: number,
    duration: number,
    letter: string = ""
  ) {
    let counter = document.getElementById(selector);
    let stepTime = Math.abs(Math.floor(duration / target));
    if (current < target && counter) {
      current++;
      counter.innerText = current.toString() + letter;
      setTimeout(
        () => incrementCounter(selector, current, target, duration, letter),
        stepTime
      );
    }
  }
  incrementCounter("art-counter", 0, 85, 1000);
  incrementCounter("youtube-counter", 0, 328, 1000, "k");
  incrementCounter("reviews-counter", 0, 250, 1000);

  // Update the path when the page loads
  window.addEventListener("DOMContentLoaded", updatePath);
  // Update the path when the window is resized
  window.addEventListener("resize", updatePath);
</script>
